spring.application.name=be-post-service

spring.profiles.active=dev

# config
spring.config.import=classpath:config.yaml
spring.main.allow-bean-definition-overriding=true

# jpa
spring:
  jpa:
    open-in-view: false
    properties:
      hibernate:
        generate_statistics: true
        format_sql: true
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 20
          fetch_size: 20
          batch_versioned_data: true
        javax.cache:
          provider: org.ehcache.jsr107.EhcacheCachingProvider
          uri: classpath:ehcache.xml
        cache:
          use_second_level_cache: true
          default_cache_concurrency_strategy: read-write
          use_minimal_puts: true
          region.factory_class: jcache
          use_query_cache: true
          use_structured_entries: true

    hibernate:
      ddl-auto: create-drop

# logging
logging:
  level:
    jdbc:
      sqlonly: fatal
      resultsettable: info
      sqltiming: info
      audit: fatal
      resultset: fatal
      connection: fatal
    org:
      springframework:
        orm: debug

# kafka
# spring:
#   kafka:
#     topic:
#       name: topic1
#     bootstrap-servers: 160.191.88.192:9094
    # security:
    #   protocol=PLAINTEXT
    # producer:
    #   key-serializer: org.apache.kafka.common.serialization.StringSerializer
    #   value-serializer: org.apache.kafka.common.serialization.StringSerializer
    # consumer:
    #   enable-auto-commit: true
    #   auto-commit-interval: 100
    #   auto-offset-reset: earliest
    #   key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #   value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #   group-id: be-post-service
    #   properties:
    #     spring:
    #       json:
    #         trusted:
    #           packages: "*"
      # properties:
      #   key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #   value.deserializer: org.apache.kafka.common.serialization.StringDeserializer

spring:
  kafka:
    topic:
      name: topic1
    consumer:
      bootstrap-servers: 160.191.88.192:9094
      group-id: my-consumer-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        partition.assignment.strategy: org.apache.kafka.clients.consumer.RangeAssignor